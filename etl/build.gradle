/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'scala'
}

apply from: "$rootDir/gradle/dependencies.gradle"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {
    // Gradle module metadata for jackson-databind 2.13.4.1 references non-existent jackson-bom.
    // Unfortunately, spark 3.3.1 uses this version.
    // This will be removed when spark is updated to 3.3.2. https://issues.apache.org/jira/browse/SPARK-40886
    compileOnly 'com.fasterxml.jackson:jackson-bom:2.13.4.20221013'
    // Astraea etl is run by spark framework, so we don't need to package spark-related dependencies
    compileOnly libs["scala"]
    compileOnly libs["spark-sql"]
    compileOnly libs["spark-kafka"]
    compileOnly libs["jackson-databind"]
    implementation libs["kafka-client"]
    implementation project(':common')


    testImplementation libs["junit"]
    testImplementation libs["opencsv"]
    // This will be removed when spark is updated to 3.3.2. https://issues.apache.org/jira/browse/SPARK-40886
    testImplementation enforcedPlatform('com.fasterxml.jackson:jackson-bom:2.13.4.20221013')
    // there are unit tests requiring spark, so we add them back for test scope
    testImplementation libs["spark-sql"]
    testImplementation libs["spark-kafka"]
    testImplementation project(':it')
}

ext {
    numberOfForks = project.hasProperty('maxParallelForks') ? maxParallelForks.toInteger() : Math.max((int) (Runtime.runtime.availableProcessors() / 2), 1)
}

archivesBaseName = "astraea-etl"

tasks.named('test') {
    // spark can't run with JDK 17 as it uses internal class
    // see https://lists.apache.org/thread/814cpb1rpp73zkhtv9t4mkzzrznl82yn
    jvmArgs '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED'
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    maxParallelForks = numberOfForks
    // make isolation for tests. It may be expensive but stability is first choice.
    forkEvery = 1
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
        exceptionFormat = 'full'
    }

    minHeapSize = "1024m"
    maxHeapSize = "2048m"
}